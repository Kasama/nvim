###########################################################################
#                            TextMate Snippets                            #
#                            	User Defined 							  #
###########################################################################

priority -50

snippet kasama ";Kasama"
;--------------------------------------------------------------------------------------------------
;-- ___   ___         __         ____________         __         ___      ___         __         --
;-- |:|   /:/        /::\        |::::::::::|        /::\        |::\    /::|        /::\        --
;-- |:|  /:/        /::::\       |::/¨¨¨¨¨¨¨¨       /::::\       |:::\  /:::|       /::::\       --
;-- |:| /:/        /::/\::\      |::|              /::/\::\      |::::\/::::|      /::/\::\      --
;-- |:|/:/        /::/__\::\     |::\________     /::/__\::\     |::|\::/|::|     /::/__\::\     --
;-- |:|\:\       /::/::::\::\    |::::::::::|    /::/::::\::\    |::| \/ |::|    /::/::::\::\    --
;-- |:| \:\     /::/¨¨¨¨¨¨\::\   ¨¨¨¨¨¨¨¨\::|   /::/¨¨¨¨¨¨\::\   |::|    |::|   /::/¨¨¨¨¨¨\::\   --
;-- |:|  \:\   /::/        \::\          /::|  /::/        \::\  |::|    |::|  /::/        \::\  --
;-- |:|   \:\ /::/          \::\ |::::::::::| /::/          \::\ |::|    |::| /::/          \::\ --
;-- ¨¨¨   ¨¨¨ ¨¨¨            ¨¨¨ ¨¨¨¨¨¨¨¨¨¨¨¨ ¨¨¨            ¨¨¨ ¨¨¨¨    ¨¨¨¨ ¨¨¨            ¨¨¨ --
;---------------------------------------------------------------------------------Assembly Codes---
;------------------------------${1:Program Name}------------------------------------
;--------------------------------------------------------------------------------------------------
${0}
endsnippet

snippet if "if"
cmp ${1:r0},${2:r1} ; compare $1 with $2 and $3 to $4_Else
${3:jne} ${4:functionName}_Else  ; simple if statement
	${0:${VISUAL:;False Code}}
jmp $4_EndIf
$4_Else:
	${5:;True Code}
$4_EndIf:
endsnippet

snippet main "main"
jmp Main
;Variables and stuff

; Main ------------------------------------------------{
Main:
	${0:${VISUAL:;Main code}}

halt
;------------------------------------------------------}
endsnippet

snippet for "for loop (for)"
loadn ${1:r0}, ${2:#10} ; load $2 to register $1
${3:functionName}_Loop:
	${0:${VISUAL:Loop Code}}
	dec $1
jnz $3_Loop
endsnippet

snippet pushall "push all registers"
push r0
push r1
push r2
push r3
push r4
push r5
push r6
push r7

${0}
endsnippet

snippet popall "pop all registers" 

pop r7
pop r6
pop r5
pop r4
pop r3
pop r2
pop r1
pop r0
${0}
endsnippet

snippet do "do...while loop (do)"
${1:functionName}_Do:
	${0:${VISUAL:;Code}}
	cmp ${2:r0},${3:r1} ; compare $2 with $3
	jne $1_Do
endsnippet

snippet func "function" b
${1:FunctionName}: ; ${2:function description}; ${3:void} (${4:usedRegisters}) {
${0}
rts
;}
;--------------------------------------------------------------
endsnippet

snippet comment "comment"
;${1:${VISUAL:Comment}}
${0}
endsnippet
